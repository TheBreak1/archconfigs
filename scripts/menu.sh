#!/bin/bash

# Script Menu with local script execution
# Author: Generated by valera456 AI gcc arch linux lazer tachyon peppy
# Version: 1.1

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Function to display header
show_header() {
    clear
    echo -e "${BLUE}"
    echo "=========================================="
    echo "       OBC & AFFILIATES ARCH SCRIPTS"
    echo "=========================================="
    echo -e "${NC}"
}

# Function to run a local script
run_local_script() {
    local script_name="$1"
    local script_path="./$script_name"
    
    if [ ! -f "$script_path" ]; then
        print_error "Script '$script_name' not found in current directory!"
        print_warning "Please make sure the script exists in the same folder as this menu."
        return 1
    fi
    
    if [ ! -x "$script_path" ]; then
        print_status "Making script executable..."
        chmod +x "$script_path"
    fi
    
    print_status "Running $script_name..."
    echo "------------------------------------------"
    
    # Execute the script
    "$script_path"
    
    local exit_code=$?
    echo "------------------------------------------"
    
    if [ $exit_code -eq 0 ]; then
        print_success "Script executed successfully!"
    else
        print_error "Script exited with error code: $exit_code"
    fi
    
    return $exit_code
}

# Function to show main menu
show_menu() {
    echo -e "${BLUE}Available Scripts:${NC}"
    echo -e "${GREEN}1.${NC} System Information Script"
    echo -e "${GREEN}2.${NC} Network Check Script"
    echo -e "${GREEN}3.${NC} Disk Usage Script"
    echo -e "${GREEN}4.${NC} Exit"
    echo -e "${BLUE}==========================================${NC}"
}

# Main program loop
while true; do
    show_header
    show_menu
    
    read -p "Choose an option [1-4]: " choice
    echo
    
    case $choice in
        1)
            run_local_script "system-info.sh"
            ;;
        2)
            run_local_script "network-info.sh"
            ;;
        3)
            run_local_script "disk-usage.sh"
            ;;
        4)
            print_success "Goodbye!"
            exit 0
            ;;
        *)
            print_error "Invalid option! Please choose between 1-4."
            ;;
    esac
    
    echo
    read -p "Press Enter to continue..."
done